- In patterns, we use nested loops
- In nested loops, the outer loop is specifically for the lines (rows) and the inner loops are specifically for the columns

There are 4 rules while solving pattern problems
1. We always use nested loops for printing the patterns. For the outer loop, we count the number of lines/rows and loop for them.
2. Next, for the inner loop, we focus on the number of columns and somehow connect them to the rows by forming a logic such that for each row we get the required number of columns to be printed.
3. We print the ‘*’ inside the inner loop.
4. Observe symmetry in the pattern or check if a pattern is a combination of two or more similar patterns. This step is optional since it doesn't apply to all the patterns

The first pattern that we are solving is:

*****
*****
*****
*****
*****

Solution:

```
for i in range(0,5):
    for j in range(0,5):
        print('*', end="")  # The end="" prevents a newline after each *.
        # j=+1 # This line does not affect the loop behavior because j in the loop is controlled by range(0, 5). The reassignment has no impact on the next iteration.
    print()
    # i=+1 #This does not affect the outer loop because i is controlled by range(0, 5).
```
